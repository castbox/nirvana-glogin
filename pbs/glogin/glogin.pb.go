// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: glogin.proto

package glogin

import (
	errors "errors"
	kite "gitlab.degames.cn/svr_comm/kite"
	pb "gitlab.degames.cn/svr_comm/kite/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//Client信息
type LoginClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei        string `protobuf:"bytes,1,opt,name=imei,proto3" json:"imei,omitempty"`                                  //国际移动设备识别码（仅安卓）
	AndroidId   string `protobuf:"bytes,2,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`       //国际移动设备识别码（仅安卓）
	Dhid        string `protobuf:"bytes,3,opt,name=dhid,proto3" json:"dhid,omitempty"`                                  //数美id
	MacAddress  string `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`    //mac地址
	DeviceModel string `protobuf:"bytes,5,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"` //设备型号
	DviceName   string `protobuf:"bytes,6,opt,name=dvice_name,json=dviceName,proto3" json:"dvice_name,omitempty"`       //设备名字
	OsVersion   string `protobuf:"bytes,7,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`       //手机系统版本
	NetworkType string `protobuf:"bytes,8,opt,name=network_type,json=networkType,proto3" json:"network_type,omitempty"` //网络类型 1蜂窝移动网络 2WIFI
	Ip          string `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`                                      //ipv4地址
	Country     string `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`                           //ISO 3166 标准二字码
}

func (x *LoginClient) Reset() {
	*x = LoginClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginClient) ProtoMessage() {}

func (x *LoginClient) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginClient.ProtoReflect.Descriptor instead.
func (*LoginClient) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{0}
}

func (x *LoginClient) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *LoginClient) GetAndroidId() string {
	if x != nil {
		return x.AndroidId
	}
	return ""
}

func (x *LoginClient) GetDhid() string {
	if x != nil {
		return x.Dhid
	}
	return ""
}

func (x *LoginClient) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *LoginClient) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *LoginClient) GetDviceName() string {
	if x != nil {
		return x.DviceName
	}
	return ""
}

func (x *LoginClient) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *LoginClient) GetNetworkType() string {
	if x != nil {
		return x.NetworkType
	}
	return ""
}

func (x *LoginClient) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoginClient) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

//Game信息
type LoginGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adid          string `protobuf:"bytes,1,opt,name=adid,proto3" json:"adid,omitempty"`                                        //广告ID (andriod)
	Idfv          string `protobuf:"bytes,2,opt,name=idfv,proto3" json:"idfv,omitempty"`                                        //苹果厂商id
	AppsflyerId   string `protobuf:"bytes,3,opt,name=appsflyer_id,json=appsflyerId,proto3" json:"appsflyer_id,omitempty"`       //appsflyer sdk得到的id
	AdvertisingId string `protobuf:"bytes,4,opt,name=advertising_id,json=advertisingId,proto3" json:"advertising_id,omitempty"` //appsflyer 使用的广告id
	DeviceToken   string `protobuf:"bytes,5,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`       //推送消息用的token
	Language      string `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`                                //游戏语言编码
	Reserved_2    string `protobuf:"bytes,7,opt,name=reserved_2,json=reserved2,proto3" json:"reserved_2,omitempty"`             //OAID广告标识符
	BundleId      string `protobuf:"bytes,8,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`                //游戏包名
	AppVersion    string `protobuf:"bytes,9,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`          //游戏包名
	Platform      string `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`                               //平台，只能是IOS或者ANDROID 大写
	Channel       string `protobuf:"bytes,11,opt,name=channel,proto3" json:"channel,omitempty"`                                 //渠道
	GameCd        string `protobuf:"bytes,12,opt,name=game_cd,json=gameCd,proto3" json:"game_cd,omitempty"`                     //游戏编码，项目标识
}

func (x *LoginGame) Reset() {
	*x = LoginGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginGame) ProtoMessage() {}

func (x *LoginGame) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginGame.ProtoReflect.Descriptor instead.
func (*LoginGame) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{1}
}

func (x *LoginGame) GetAdid() string {
	if x != nil {
		return x.Adid
	}
	return ""
}

func (x *LoginGame) GetIdfv() string {
	if x != nil {
		return x.Idfv
	}
	return ""
}

func (x *LoginGame) GetAppsflyerId() string {
	if x != nil {
		return x.AppsflyerId
	}
	return ""
}

func (x *LoginGame) GetAdvertisingId() string {
	if x != nil {
		return x.AdvertisingId
	}
	return ""
}

func (x *LoginGame) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *LoginGame) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *LoginGame) GetReserved_2() string {
	if x != nil {
		return x.Reserved_2
	}
	return ""
}

func (x *LoginGame) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *LoginGame) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *LoginGame) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *LoginGame) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *LoginGame) GetGameCd() string {
	if x != nil {
		return x.GameCd
	}
	return ""
}

// 防沉迷返回
type StateQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId            string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                                   // 每次请求唯一标识
	ErrCode              string `protobuf:"bytes,2,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`                                         // 错误码
	ErrMsg               string `protobuf:"bytes,3,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`                                            // 错误码说明
	AuthenticationStatus int32  `protobuf:"varint,4,opt,name=authentication_status,json=authenticationStatus,proto3" json:"authentication_status,omitempty"` // 实名状态：0：成年，1：游客，2：0-8岁，3：8-16岁，4：16-18岁，5:认证中，6:异常认证中
	IsHoliday            bool   `protobuf:"varint,5,opt,name=is_holiday,json=isHoliday,proto3" json:"is_holiday,omitempty"`                                  // 是否节假日
	LeftGameTime         int32  `protobuf:"varint,8,opt,name=left_game_time,json=leftGameTime,proto3" json:"left_game_time,omitempty"`                       // 剩余游戏时间，已成年请忽略
	EachPayAmount        int32  `protobuf:"varint,9,opt,name=each_pay_amount,json=eachPayAmount,proto3" json:"each_pay_amount,omitempty"`                    // 单次可充值额度，已成年请忽略
	LeftPayAmount        int32  `protobuf:"varint,10,opt,name=left_pay_amount,json=leftPayAmount,proto3" json:"left_pay_amount,omitempty"`                   // 总剩充值额度，已成年请忽略
	LoginCode            int32  `protobuf:"varint,11,opt,name=login_code,json=loginCode,proto3" json:"login_code,omitempty"`                                 // 是否可以登陆的提示code
	LoginMessage         string `protobuf:"bytes,12,opt,name=login_message,json=loginMessage,proto3" json:"login_message,omitempty"`                         // 如果login_code不为0，相应的提示字段。
}

func (x *StateQueryResponse) Reset() {
	*x = StateQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateQueryResponse) ProtoMessage() {}

func (x *StateQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateQueryResponse.ProtoReflect.Descriptor instead.
func (*StateQueryResponse) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{2}
}

func (x *StateQueryResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *StateQueryResponse) GetErrCode() string {
	if x != nil {
		return x.ErrCode
	}
	return ""
}

func (x *StateQueryResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *StateQueryResponse) GetAuthenticationStatus() int32 {
	if x != nil {
		return x.AuthenticationStatus
	}
	return 0
}

func (x *StateQueryResponse) GetIsHoliday() bool {
	if x != nil {
		return x.IsHoliday
	}
	return false
}

func (x *StateQueryResponse) GetLeftGameTime() int32 {
	if x != nil {
		return x.LeftGameTime
	}
	return 0
}

func (x *StateQueryResponse) GetEachPayAmount() int32 {
	if x != nil {
		return x.EachPayAmount
	}
	return 0
}

func (x *StateQueryResponse) GetLeftPayAmount() int32 {
	if x != nil {
		return x.LeftPayAmount
	}
	return 0
}

func (x *StateQueryResponse) GetLoginCode() int32 {
	if x != nil {
		return x.LoginCode
	}
	return 0
}

func (x *StateQueryResponse) GetLoginMessage() string {
	if x != nil {
		return x.LoginMessage
	}
	return ""
}

// extendData
type ExtendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick           string              `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`                                              //nick 昵称 手机号为脱敏
	Authentication *StateQueryResponse `protobuf:"bytes,2,opt,name=authentication,proto3" json:"authentication,omitempty"`                          //防沉迷状态信息
	GameFirstLogin bool                `protobuf:"varint,3,opt,name=game_first_login,json=gameFirstLogin,proto3" json:"game_first_login,omitempty"` //游戏首次登录标记
}

func (x *ExtendData) Reset() {
	*x = ExtendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendData) ProtoMessage() {}

func (x *ExtendData) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendData.ProtoReflect.Descriptor instead.
func (*ExtendData) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{3}
}

func (x *ExtendData) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *ExtendData) GetAuthentication() *StateQueryResponse {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *ExtendData) GetGameFirstLogin() bool {
	if x != nil {
		return x.GameFirstLogin
	}
	return false
}

//第三方登录请求
type ThirdLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThirdPlat   string       `protobuf:"bytes,1,opt,name=third_plat,json=thirdPlat,proto3" json:"third_plat,omitempty"`       // 第三方登录的平台( google、facebook, qq, 微信,yedun）
	ThirdUid    string       `protobuf:"bytes,2,opt,name=third_uid,json=thirdUid,proto3" json:"third_uid,omitempty"`          // 第三方登录时客户端获取到的唯一ID
	ThirdToken  string       `protobuf:"bytes,3,opt,name=third_token,json=thirdToken,proto3" json:"third_token,omitempty"`    // 第三方登录时客户端获取的变化token串
	AccessToken string       `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 运营商授权码token
	Client      *LoginClient `protobuf:"bytes,5,opt,name=client,proto3" json:"client,omitempty"`                              // Client信息
	Game        *LoginGame   `protobuf:"bytes,6,opt,name=game,proto3" json:"game,omitempty"`                                  // Game信息
}

func (x *ThirdLoginReq) Reset() {
	*x = ThirdLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdLoginReq) ProtoMessage() {}

func (x *ThirdLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdLoginReq.ProtoReflect.Descriptor instead.
func (*ThirdLoginReq) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{4}
}

func (x *ThirdLoginReq) GetThirdPlat() string {
	if x != nil {
		return x.ThirdPlat
	}
	return ""
}

func (x *ThirdLoginReq) GetThirdUid() string {
	if x != nil {
		return x.ThirdUid
	}
	return ""
}

func (x *ThirdLoginReq) GetThirdToken() string {
	if x != nil {
		return x.ThirdToken
	}
	return ""
}

func (x *ThirdLoginReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ThirdLoginReq) GetClient() *LoginClient {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *ThirdLoginReq) GetGame() *LoginGame {
	if x != nil {
		return x.Game
	}
	return nil
}

//第三方登录返回
type ThridLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                              //状态码；0:成功，其他为失败
	DhToken    string      `protobuf:"bytes,2,opt,name=dh_token,json=dhToken,proto3" json:"dh_token,omitempty"`          //DH token 发送到游戏网关使用
	ThirdUid   string      `protobuf:"bytes,3,opt,name=third_uid,json=thirdUid,proto3" json:"third_uid,omitempty"`       //第三方登录的uid
	Errmsg     string      `protobuf:"bytes,4,opt,name=errmsg,proto3" json:"errmsg,omitempty"`                           //第三方登录的uid
	SmId       string      `protobuf:"bytes,5,opt,name=sm_id,json=smId,proto3" json:"sm_id,omitempty"`                   //解析过后的数美ID，如果解析失败 原样返回
	DhAccount  int32       `protobuf:"varint,6,opt,name=dh_account,json=dhAccount,proto3" json:"dh_account,omitempty"`   //dh数字账号
	ExtendData *ExtendData `protobuf:"bytes,7,opt,name=extend_data,json=extendData,proto3" json:"extend_data,omitempty"` //扩展数据
}

func (x *ThridLoginRsp) Reset() {
	*x = ThridLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThridLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThridLoginRsp) ProtoMessage() {}

func (x *ThridLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThridLoginRsp.ProtoReflect.Descriptor instead.
func (*ThridLoginRsp) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{5}
}

func (x *ThridLoginRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ThridLoginRsp) GetDhToken() string {
	if x != nil {
		return x.DhToken
	}
	return ""
}

func (x *ThridLoginRsp) GetThirdUid() string {
	if x != nil {
		return x.ThirdUid
	}
	return ""
}

func (x *ThridLoginRsp) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *ThridLoginRsp) GetSmId() string {
	if x != nil {
		return x.SmId
	}
	return ""
}

func (x *ThridLoginRsp) GetDhAccount() int32 {
	if x != nil {
		return x.DhAccount
	}
	return 0
}

func (x *ThridLoginRsp) GetExtendData() *ExtendData {
	if x != nil {
		return x.ExtendData
	}
	return nil
}

//手机验证码登录请求
type SmsLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step       string       `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`             // 步骤（verify获得验证码，login登陆）
	Phone      string       `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`           // 手机号码
	Verifycode string       `protobuf:"bytes,3,opt,name=verifycode,proto3" json:"verifycode,omitempty"` // 获得的待验证的手机验证码 (step为登陆时需传)
	Client     *LoginClient `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`         // Client信息
	Game       *LoginGame   `protobuf:"bytes,5,opt,name=game,proto3" json:"game,omitempty"`             // Game信息
}

func (x *SmsLoginReq) Reset() {
	*x = SmsLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsLoginReq) ProtoMessage() {}

func (x *SmsLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsLoginReq.ProtoReflect.Descriptor instead.
func (*SmsLoginReq) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{6}
}

func (x *SmsLoginReq) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *SmsLoginReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SmsLoginReq) GetVerifycode() string {
	if x != nil {
		return x.Verifycode
	}
	return ""
}

func (x *SmsLoginReq) GetClient() *LoginClient {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *SmsLoginReq) GetGame() *LoginGame {
	if x != nil {
		return x.Game
	}
	return nil
}

//手机验证码登录返回
type SmsLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                              //状态码；0:成功，其他为失败
	DhToken    string      `protobuf:"bytes,2,opt,name=dh_token,json=dhToken,proto3" json:"dh_token,omitempty"`          //DH token 发送到游戏网关使用
	Errmsg     string      `protobuf:"bytes,3,opt,name=errmsg,proto3" json:"errmsg,omitempty"`                           //第三方登录的uid
	SmId       string      `protobuf:"bytes,4,opt,name=sm_id,json=smId,proto3" json:"sm_id,omitempty"`                   //解析过后的数美ID，如果解析失败 原样返回
	DhAccount  int32       `protobuf:"varint,5,opt,name=dh_account,json=dhAccount,proto3" json:"dh_account,omitempty"`   //dh数字账号
	ExtendData *ExtendData `protobuf:"bytes,6,opt,name=extend_data,json=extendData,proto3" json:"extend_data,omitempty"` //Extend信息
}

func (x *SmsLoginRsp) Reset() {
	*x = SmsLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsLoginRsp) ProtoMessage() {}

func (x *SmsLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsLoginRsp.ProtoReflect.Descriptor instead.
func (*SmsLoginRsp) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{7}
}

func (x *SmsLoginRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SmsLoginRsp) GetDhToken() string {
	if x != nil {
		return x.DhToken
	}
	return ""
}

func (x *SmsLoginRsp) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *SmsLoginRsp) GetSmId() string {
	if x != nil {
		return x.SmId
	}
	return ""
}

func (x *SmsLoginRsp) GetDhAccount() int32 {
	if x != nil {
		return x.DhAccount
	}
	return 0
}

func (x *SmsLoginRsp) GetExtendData() *ExtendData {
	if x != nil {
		return x.ExtendData
	}
	return nil
}

//游客登录请求参数
type VisitorLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dhid   string       `protobuf:"bytes,1,opt,name=dhid,proto3" json:"dhid,omitempty"`     // 数美id (visitor ID)
	Client *LoginClient `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"` // Client信息
	Game   *LoginGame   `protobuf:"bytes,3,opt,name=game,proto3" json:"game,omitempty"`     // Game信息
}

func (x *VisitorLoginReq) Reset() {
	*x = VisitorLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisitorLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisitorLoginReq) ProtoMessage() {}

func (x *VisitorLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisitorLoginReq.ProtoReflect.Descriptor instead.
func (*VisitorLoginReq) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{8}
}

func (x *VisitorLoginReq) GetDhid() string {
	if x != nil {
		return x.Dhid
	}
	return ""
}

func (x *VisitorLoginReq) GetClient() *LoginClient {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *VisitorLoginReq) GetGame() *LoginGame {
	if x != nil {
		return x.Game
	}
	return nil
}

//游客登录返回
type VisitorLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                              //状态码；0:成功，其他为失败
	DhToken    string      `protobuf:"bytes,2,opt,name=dh_token,json=dhToken,proto3" json:"dh_token,omitempty"`          //快速登录加密token
	Errmsg     string      `protobuf:"bytes,3,opt,name=errmsg,proto3" json:"errmsg,omitempty"`                           //错误信息(会有详细错误说明）
	SmId       string      `protobuf:"bytes,4,opt,name=sm_id,json=smId,proto3" json:"sm_id,omitempty"`                   //解析过后的数美ID，如果解析失败 原样返回
	DhAccount  int32       `protobuf:"varint,5,opt,name=dh_account,json=dhAccount,proto3" json:"dh_account,omitempty"`   //dh数字账号
	Visitor    string      `protobuf:"bytes,6,opt,name=visitor,proto3" json:"visitor,omitempty"`                         //生成账号的visitor
	ExtendData *ExtendData `protobuf:"bytes,7,opt,name=extend_data,json=extendData,proto3" json:"extend_data,omitempty"` //Extend信息
}

func (x *VisitorLoginRsp) Reset() {
	*x = VisitorLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisitorLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisitorLoginRsp) ProtoMessage() {}

func (x *VisitorLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisitorLoginRsp.ProtoReflect.Descriptor instead.
func (*VisitorLoginRsp) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{9}
}

func (x *VisitorLoginRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VisitorLoginRsp) GetDhToken() string {
	if x != nil {
		return x.DhToken
	}
	return ""
}

func (x *VisitorLoginRsp) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *VisitorLoginRsp) GetSmId() string {
	if x != nil {
		return x.SmId
	}
	return ""
}

func (x *VisitorLoginRsp) GetDhAccount() int32 {
	if x != nil {
		return x.DhAccount
	}
	return 0
}

func (x *VisitorLoginRsp) GetVisitor() string {
	if x != nil {
		return x.Visitor
	}
	return ""
}

func (x *VisitorLoginRsp) GetExtendData() *ExtendData {
	if x != nil {
		return x.ExtendData
	}
	return nil
}

//Fast登录请求参数
type FastLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DhToken string       `protobuf:"bytes,1,opt,name=dh_token,json=dhToken,proto3" json:"dh_token,omitempty"` // 客户端缓存的 login token
	Client  *LoginClient `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`                  // Client信息
	Game    *LoginGame   `protobuf:"bytes,3,opt,name=game,proto3" json:"game,omitempty"`                      // Game信息
}

func (x *FastLoginReq) Reset() {
	*x = FastLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FastLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FastLoginReq) ProtoMessage() {}

func (x *FastLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FastLoginReq.ProtoReflect.Descriptor instead.
func (*FastLoginReq) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{10}
}

func (x *FastLoginReq) GetDhToken() string {
	if x != nil {
		return x.DhToken
	}
	return ""
}

func (x *FastLoginReq) GetClient() *LoginClient {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *FastLoginReq) GetGame() *LoginGame {
	if x != nil {
		return x.Game
	}
	return nil
}

//Fast登录返回
type FastLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                              //状态码；0:成功，其他为失败
	DhToken    string      `protobuf:"bytes,2,opt,name=dh_token,json=dhToken,proto3" json:"dh_token,omitempty"`          //快速登录加密token
	Errmsg     string      `protobuf:"bytes,3,opt,name=errmsg,proto3" json:"errmsg,omitempty"`                           //错误信息(会有详细错误说明）
	SmId       string      `protobuf:"bytes,4,opt,name=sm_id,json=smId,proto3" json:"sm_id,omitempty"`                   //解析过后的数美ID，如果解析失败 原样返回
	DhAccount  int32       `protobuf:"varint,5,opt,name=dh_account,json=dhAccount,proto3" json:"dh_account,omitempty"`   //dh数字账号
	ExtendData *ExtendData `protobuf:"bytes,6,opt,name=extend_data,json=extendData,proto3" json:"extend_data,omitempty"` //Extend信息
	ThirdPlat  string      `protobuf:"bytes,7,opt,name=third_plat,json=thirdPlat,proto3" json:"third_plat,omitempty"`    //fast登录返回第三方登录方式
}

func (x *FastLoginRsp) Reset() {
	*x = FastLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FastLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FastLoginRsp) ProtoMessage() {}

func (x *FastLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FastLoginRsp.ProtoReflect.Descriptor instead.
func (*FastLoginRsp) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{11}
}

func (x *FastLoginRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FastLoginRsp) GetDhToken() string {
	if x != nil {
		return x.DhToken
	}
	return ""
}

func (x *FastLoginRsp) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *FastLoginRsp) GetSmId() string {
	if x != nil {
		return x.SmId
	}
	return ""
}

func (x *FastLoginRsp) GetDhAccount() int32 {
	if x != nil {
		return x.DhAccount
	}
	return 0
}

func (x *FastLoginRsp) GetExtendData() *ExtendData {
	if x != nil {
		return x.ExtendData
	}
	return nil
}

func (x *FastLoginRsp) GetThirdPlat() string {
	if x != nil {
		return x.ThirdPlat
	}
	return ""
}

//游客绑定申请
type VistorBindThridReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dhid       string `protobuf:"bytes,1,opt,name=dhid,proto3" json:"dhid,omitempty"`
	DhToken    string `protobuf:"bytes,2,opt,name=dh_token,json=dhToken,proto3" json:"dh_token,omitempty"`
	ThirdPlat  string `protobuf:"bytes,3,opt,name=third_plat,json=thirdPlat,proto3" json:"third_plat,omitempty"`
	ThirdToken string `protobuf:"bytes,4,opt,name=third_token,json=thirdToken,proto3" json:"third_token,omitempty"`
	Visitor    string `protobuf:"bytes,5,opt,name=visitor,proto3" json:"visitor,omitempty"`
}

func (x *VistorBindThridReq) Reset() {
	*x = VistorBindThridReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VistorBindThridReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VistorBindThridReq) ProtoMessage() {}

func (x *VistorBindThridReq) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VistorBindThridReq.ProtoReflect.Descriptor instead.
func (*VistorBindThridReq) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{12}
}

func (x *VistorBindThridReq) GetDhid() string {
	if x != nil {
		return x.Dhid
	}
	return ""
}

func (x *VistorBindThridReq) GetDhToken() string {
	if x != nil {
		return x.DhToken
	}
	return ""
}

func (x *VistorBindThridReq) GetThirdPlat() string {
	if x != nil {
		return x.ThirdPlat
	}
	return ""
}

func (x *VistorBindThridReq) GetThirdToken() string {
	if x != nil {
		return x.ThirdToken
	}
	return ""
}

func (x *VistorBindThridReq) GetVisitor() string {
	if x != nil {
		return x.Visitor
	}
	return ""
}

//游客绑定回复
type VistorBindThridRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	DhToken    string      `protobuf:"bytes,2,opt,name=dh_token,json=dhToken,proto3" json:"dh_token,omitempty"`
	Errmsg     string      `protobuf:"bytes,3,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	SmId       string      `protobuf:"bytes,4,opt,name=sm_id,json=smId,proto3" json:"sm_id,omitempty"`
	DhAccount  int32       `protobuf:"varint,5,opt,name=dh_account,json=dhAccount,proto3" json:"dh_account,omitempty"`
	ExtendData *ExtendData `protobuf:"bytes,6,opt,name=extend_data,json=extendData,proto3" json:"extend_data,omitempty"` //Extend信息
	ThirdPlat  string      `protobuf:"bytes,7,opt,name=third_plat,json=thirdPlat,proto3" json:"third_plat,omitempty"`
}

func (x *VistorBindThridRsp) Reset() {
	*x = VistorBindThridRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VistorBindThridRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VistorBindThridRsp) ProtoMessage() {}

func (x *VistorBindThridRsp) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VistorBindThridRsp.ProtoReflect.Descriptor instead.
func (*VistorBindThridRsp) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{13}
}

func (x *VistorBindThridRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VistorBindThridRsp) GetDhToken() string {
	if x != nil {
		return x.DhToken
	}
	return ""
}

func (x *VistorBindThridRsp) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *VistorBindThridRsp) GetSmId() string {
	if x != nil {
		return x.SmId
	}
	return ""
}

func (x *VistorBindThridRsp) GetDhAccount() int32 {
	if x != nil {
		return x.DhAccount
	}
	return 0
}

func (x *VistorBindThridRsp) GetExtendData() *ExtendData {
	if x != nil {
		return x.ExtendData
	}
	return nil
}

func (x *VistorBindThridRsp) GetThirdPlat() string {
	if x != nil {
		return x.ThirdPlat
	}
	return ""
}

//给GMP调用的moss接口
type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Bundleids []string `protobuf:"bytes,2,rep,name=bundleids,proto3" json:"bundleids,omitempty"`
	LoginType string   `protobuf:"bytes,3,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"`
	PageNum   int32    `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize  int32    `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{14}
}

func (x *QueryRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *QueryRequest) GetBundleids() []string {
	if x != nil {
		return x.Bundleids
	}
	return nil
}

func (x *QueryRequest) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *QueryRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Count int32          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Msg   string         `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  []*AccountData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{15}
}

func (x *QueryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *QueryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryResponse) GetData() []*AccountData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AccountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId       int32       `protobuf:"varint,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	BundleId  string      `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	Facebook  string      `protobuf:"bytes,3,opt,name=facebook,proto3" json:"facebook,omitempty"`
	Ios       string      `protobuf:"bytes,4,opt,name=ios,proto3" json:"ios,omitempty"`
	Google    string      `protobuf:"bytes,5,opt,name=google,proto3" json:"google,omitempty"`
	Phone     string      `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Create    *CreateData `protobuf:"bytes,7,opt,name=create,proto3" json:"create,omitempty"`
	Visitor   string      `protobuf:"bytes,8,opt,name=visitor,proto3" json:"visitor,omitempty"`
	LastLogin int64       `protobuf:"varint,9,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
}

func (x *AccountData) Reset() {
	*x = AccountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountData) ProtoMessage() {}

func (x *AccountData) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountData.ProtoReflect.Descriptor instead.
func (*AccountData) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{16}
}

func (x *AccountData) GetXId() int32 {
	if x != nil {
		return x.XId
	}
	return 0
}

func (x *AccountData) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *AccountData) GetFacebook() string {
	if x != nil {
		return x.Facebook
	}
	return ""
}

func (x *AccountData) GetIos() string {
	if x != nil {
		return x.Ios
	}
	return ""
}

func (x *AccountData) GetGoogle() string {
	if x != nil {
		return x.Google
	}
	return ""
}

func (x *AccountData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AccountData) GetCreate() *CreateData {
	if x != nil {
		return x.Create
	}
	return nil
}

func (x *AccountData) GetVisitor() string {
	if x != nil {
		return x.Visitor
	}
	return ""
}

func (x *AccountData) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

type CreateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip       string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Time     int64  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	SmId     string `protobuf:"bytes,3,opt,name=sm_id,json=smId,proto3" json:"sm_id,omitempty"`
	BundleId string `protobuf:"bytes,4,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
}

func (x *CreateData) Reset() {
	*x = CreateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateData) ProtoMessage() {}

func (x *CreateData) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateData.ProtoReflect.Descriptor instead.
func (*CreateData) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{17}
}

func (x *CreateData) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CreateData) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *CreateData) GetSmId() string {
	if x != nil {
		return x.SmId
	}
	return ""
}

func (x *CreateData) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

//新查询接口,支持批量查账号
type QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts  []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Bundleids []string `protobuf:"bytes,2,rep,name=bundleids,proto3" json:"bundleids,omitempty"`
	LoginType string   `protobuf:"bytes,3,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"`
	PageNum   int32    `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize  int32    `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *QueryReq) Reset() {
	*x = QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReq) ProtoMessage() {}

func (x *QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReq.ProtoReflect.Descriptor instead.
func (*QueryReq) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{18}
}

func (x *QueryReq) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *QueryReq) GetBundleids() []string {
	if x != nil {
		return x.Bundleids
	}
	return nil
}

func (x *QueryReq) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *QueryReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Count int32          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Msg   string         `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  []*AccountData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryRsp) Reset() {
	*x = QueryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRsp) ProtoMessage() {}

func (x *QueryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRsp.ProtoReflect.Descriptor instead.
func (*QueryRsp) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{19}
}

func (x *QueryRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryRsp) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *QueryRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryRsp) GetData() []*AccountData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 第三方换绑手机
type ChangeBindReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Phone   string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Plat    string `protobuf:"bytes,3,opt,name=plat,proto3" json:"plat,omitempty"`
}

func (x *ChangeBindReq) Reset() {
	*x = ChangeBindReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeBindReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBindReq) ProtoMessage() {}

func (x *ChangeBindReq) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBindReq.ProtoReflect.Descriptor instead.
func (*ChangeBindReq) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{20}
}

func (x *ChangeBindReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ChangeBindReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ChangeBindReq) GetPlat() string {
	if x != nil {
		return x.Plat
	}
	return ""
}

type ChangeBindRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AccountData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ChangeBindRsp) Reset() {
	*x = ChangeBindRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glogin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeBindRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBindRsp) ProtoMessage() {}

func (x *ChangeBindRsp) ProtoReflect() protoreflect.Message {
	mi := &file_glogin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBindRsp.ProtoReflect.Descriptor instead.
func (*ChangeBindRsp) Descriptor() ([]byte, []int) {
	return file_glogin_proto_rawDescGZIP(), []int{21}
}

func (x *ChangeBindRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChangeBindRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ChangeBindRsp) GetData() *AccountData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_glogin_proto protoreflect.FileDescriptor

var file_glogin_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0xa3, 0x02, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x68, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x68, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xe8, 0x02, 0x0a,
	0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x64, 0x66, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64,
	0x66, 0x76, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x73, 0x66, 0x6c, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x73, 0x66, 0x6c,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x64, 0x22, 0xf5, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x48, 0x6f,
	0x6c, 0x69, 0x64, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c,
	0x65, 0x66, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65,
	0x61, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x61, 0x63, 0x68, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x65,
	0x66, 0x74, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x8e, 0x01, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69,
	0x63, 0x6b, 0x12, 0x42, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x22, 0xe3, 0x01, 0x0a, 0x0d, 0x54, 0x68, 0x69, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x69, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x0d, 0x54, 0x68, 0x72, 0x69, 0x64,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x13, 0x0a, 0x05,
	0x73, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6d, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x33, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xab, 0x01, 0x0a, 0x0b, 0x53, 0x6d, 0x73, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x0b, 0x53, 0x6d, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6d, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33,
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x79, 0x0a, 0x0f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x68, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x68, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0xdb,
	0x01, 0x0a, 0x0f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6d, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x64, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7d, 0x0a, 0x0c,
	0x46, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x0c,
	0x46, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6d, 0x73, 0x67, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x68, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x68,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x12,
	0x56, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x68, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x22, 0xe3, 0x01, 0x0a, 0x12,
	0x56, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x69, 0x64, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6d, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x64, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a,
	0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61,
	0x74, 0x22, 0x9d, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x69, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x74, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x27,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xfc, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x62, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x08, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x69, 0x64,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6f, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x0d, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x22, 0x5e,
	0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xe0,
	0x01, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x03, 0x53, 0x4d, 0x53, 0x12,
	0x13, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x6d, 0x73, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x6d,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x05, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x12, 0x15, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x67, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x2e, 0x54, 0x68, 0x72, 0x69, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x3b, 0x0a, 0x07, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x2e, 0x67, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x32, 0x0a,
	0x04, 0x46, 0x61, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x46,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73,
	0x70, 0x32, 0x4b, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x42, 0x69, 0x6e,
	0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e,
	0x56, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x56, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x69, 0x64, 0x52, 0x73, 0x70, 0x32, 0xb5,
	0x01, 0x0a, 0x03, 0x47, 0x6d, 0x70, 0x12, 0x3e, 0x0a, 0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x67, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x67, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x67, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_glogin_proto_rawDescOnce sync.Once
	file_glogin_proto_rawDescData = file_glogin_proto_rawDesc
)

func file_glogin_proto_rawDescGZIP() []byte {
	file_glogin_proto_rawDescOnce.Do(func() {
		file_glogin_proto_rawDescData = protoimpl.X.CompressGZIP(file_glogin_proto_rawDescData)
	})
	return file_glogin_proto_rawDescData
}

var file_glogin_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_glogin_proto_goTypes = []interface{}{
	(*LoginClient)(nil),        // 0: glogin.LoginClient
	(*LoginGame)(nil),          // 1: glogin.LoginGame
	(*StateQueryResponse)(nil), // 2: glogin.StateQueryResponse
	(*ExtendData)(nil),         // 3: glogin.ExtendData
	(*ThirdLoginReq)(nil),      // 4: glogin.ThirdLoginReq
	(*ThridLoginRsp)(nil),      // 5: glogin.ThridLoginRsp
	(*SmsLoginReq)(nil),        // 6: glogin.SmsLoginReq
	(*SmsLoginRsp)(nil),        // 7: glogin.SmsLoginRsp
	(*VisitorLoginReq)(nil),    // 8: glogin.VisitorLoginReq
	(*VisitorLoginRsp)(nil),    // 9: glogin.VisitorLoginRsp
	(*FastLoginReq)(nil),       // 10: glogin.FastLoginReq
	(*FastLoginRsp)(nil),       // 11: glogin.FastLoginRsp
	(*VistorBindThridReq)(nil), // 12: glogin.VistorBindThridReq
	(*VistorBindThridRsp)(nil), // 13: glogin.VistorBindThridRsp
	(*QueryRequest)(nil),       // 14: glogin.QueryRequest
	(*QueryResponse)(nil),      // 15: glogin.QueryResponse
	(*AccountData)(nil),        // 16: glogin.AccountData
	(*CreateData)(nil),         // 17: glogin.CreateData
	(*QueryReq)(nil),           // 18: glogin.QueryReq
	(*QueryRsp)(nil),           // 19: glogin.QueryRsp
	(*ChangeBindReq)(nil),      // 20: glogin.ChangeBindReq
	(*ChangeBindRsp)(nil),      // 21: glogin.ChangeBindRsp
}
var file_glogin_proto_depIdxs = []int32{
	2,  // 0: glogin.ExtendData.authentication:type_name -> glogin.StateQueryResponse
	0,  // 1: glogin.ThirdLoginReq.client:type_name -> glogin.LoginClient
	1,  // 2: glogin.ThirdLoginReq.game:type_name -> glogin.LoginGame
	3,  // 3: glogin.ThridLoginRsp.extend_data:type_name -> glogin.ExtendData
	0,  // 4: glogin.SmsLoginReq.client:type_name -> glogin.LoginClient
	1,  // 5: glogin.SmsLoginReq.game:type_name -> glogin.LoginGame
	3,  // 6: glogin.SmsLoginRsp.extend_data:type_name -> glogin.ExtendData
	0,  // 7: glogin.VisitorLoginReq.client:type_name -> glogin.LoginClient
	1,  // 8: glogin.VisitorLoginReq.game:type_name -> glogin.LoginGame
	3,  // 9: glogin.VisitorLoginRsp.extend_data:type_name -> glogin.ExtendData
	0,  // 10: glogin.FastLoginReq.client:type_name -> glogin.LoginClient
	1,  // 11: glogin.FastLoginReq.game:type_name -> glogin.LoginGame
	3,  // 12: glogin.FastLoginRsp.extend_data:type_name -> glogin.ExtendData
	3,  // 13: glogin.VistorBindThridRsp.extend_data:type_name -> glogin.ExtendData
	16, // 14: glogin.QueryResponse.data:type_name -> glogin.AccountData
	17, // 15: glogin.AccountData.create:type_name -> glogin.CreateData
	16, // 16: glogin.QueryRsp.data:type_name -> glogin.AccountData
	16, // 17: glogin.ChangeBindRsp.data:type_name -> glogin.AccountData
	6,  // 18: glogin.Login.SMS:input_type -> glogin.SmsLoginReq
	4,  // 19: glogin.Login.Third:input_type -> glogin.ThirdLoginReq
	8,  // 20: glogin.Login.Visitor:input_type -> glogin.VisitorLoginReq
	10, // 21: glogin.Login.Fast:input_type -> glogin.FastLoginReq
	12, // 22: glogin.Bind.BindThird:input_type -> glogin.VistorBindThridReq
	14, // 23: glogin.Gmp.LoadAccountInfo:input_type -> glogin.QueryRequest
	18, // 24: glogin.Gmp.QueryAccount:input_type -> glogin.QueryReq
	20, // 25: glogin.Gmp.ChangeBind:input_type -> glogin.ChangeBindReq
	7,  // 26: glogin.Login.SMS:output_type -> glogin.SmsLoginRsp
	5,  // 27: glogin.Login.Third:output_type -> glogin.ThridLoginRsp
	9,  // 28: glogin.Login.Visitor:output_type -> glogin.VisitorLoginRsp
	11, // 29: glogin.Login.Fast:output_type -> glogin.FastLoginRsp
	13, // 30: glogin.Bind.BindThird:output_type -> glogin.VistorBindThridRsp
	15, // 31: glogin.Gmp.LoadAccountInfo:output_type -> glogin.QueryResponse
	19, // 32: glogin.Gmp.QueryAccount:output_type -> glogin.QueryRsp
	21, // 33: glogin.Gmp.ChangeBind:output_type -> glogin.ChangeBindRsp
	26, // [26:34] is the sub-list for method output_type
	18, // [18:26] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_glogin_proto_init() }
func file_glogin_proto_init() {
	if File_glogin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_glogin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThridLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisitorLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisitorLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FastLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FastLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VistorBindThridReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VistorBindThridRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeBindReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_glogin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeBindRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_glogin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_glogin_proto_goTypes,
		DependencyIndexes: file_glogin_proto_depIdxs,
		MessageInfos:      file_glogin_proto_msgTypes,
	}.Build()
	File_glogin_proto = out.File
	file_glogin_proto_rawDesc = nil
	file_glogin_proto_goTypes = nil
	file_glogin_proto_depIdxs = nil
}

// LoginClient is the client API for Login service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/kite#ClientConn.NewStream.
var Login = &login{}

type login struct {
}

func (c *login) SMS(destination kite.Destination, request *SmsLoginReq, opts ...kite.Option) (response *SmsLoginRsp, err error) {
	reqPBData, err := pb.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "glogin", "Login", "SMS", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(SmsLoginRsp)
	err = pb.Unmarshal(resPBData, response)
	return
}

func (c *login) Third(destination kite.Destination, request *ThirdLoginReq, opts ...kite.Option) (response *ThridLoginRsp, err error) {
	reqPBData, err := pb.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "glogin", "Login", "Third", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(ThridLoginRsp)
	err = pb.Unmarshal(resPBData, response)
	return
}

func (c *login) Visitor(destination kite.Destination, request *VisitorLoginReq, opts ...kite.Option) (response *VisitorLoginRsp, err error) {
	reqPBData, err := pb.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "glogin", "Login", "Visitor", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(VisitorLoginRsp)
	err = pb.Unmarshal(resPBData, response)
	return
}

func (c *login) Fast(destination kite.Destination, request *FastLoginReq, opts ...kite.Option) (response *FastLoginRsp, err error) {
	reqPBData, err := pb.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "glogin", "Login", "Fast", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(FastLoginRsp)
	err = pb.Unmarshal(resPBData, response)
	return
}

// LoginServer is the server API for Login service.
type LoginServer interface {
	SMS(*SmsLoginReq) (*SmsLoginRsp, error)
	Third(*ThirdLoginReq) (*ThridLoginRsp, error)
	Visitor(*VisitorLoginReq) (*VisitorLoginRsp, error)
	Fast(*FastLoginReq) (*FastLoginRsp, error)
}

type LoginService struct {
	handle LoginServer
}

func RegLoginServer(handle LoginServer) {
	pb.ServiceDispatchObject.AddService("glogin", "Login", &LoginService{handle: handle})
}

func (s *LoginService) Do(function string, reqPBData []byte) (resPBData []byte, err error) {
	switch function {
	case "SMS":
		return s.SMS(function, reqPBData)
	case "Third":
		return s.Third(function, reqPBData)
	case "Visitor":
		return s.Visitor(function, reqPBData)
	case "Fast":
		return s.Fast(function, reqPBData)
	default:
		err = errors.New("function is not found")
	}
	return
}

func (s *LoginService) SMS(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(SmsLoginReq)
	pb.Unmarshal(reqPBData, req)
	res := new(SmsLoginRsp)
	res, err = s.handle.SMS(req)
	if err == nil {
		resPBData, err = pb.Marshal(res)
	}
	return
}

func (s *LoginService) Third(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(ThirdLoginReq)
	pb.Unmarshal(reqPBData, req)
	res := new(ThridLoginRsp)
	res, err = s.handle.Third(req)
	if err == nil {
		resPBData, err = pb.Marshal(res)
	}
	return
}

func (s *LoginService) Visitor(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(VisitorLoginReq)
	pb.Unmarshal(reqPBData, req)
	res := new(VisitorLoginRsp)
	res, err = s.handle.Visitor(req)
	if err == nil {
		resPBData, err = pb.Marshal(res)
	}
	return
}

func (s *LoginService) Fast(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(FastLoginReq)
	pb.Unmarshal(reqPBData, req)
	res := new(FastLoginRsp)
	res, err = s.handle.Fast(req)
	if err == nil {
		resPBData, err = pb.Marshal(res)
	}
	return
}

// BindClient is the client API for Bind service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/kite#ClientConn.NewStream.
var Bind = &bind{}

type bind struct {
}

func (c *bind) BindThird(destination kite.Destination, request *VistorBindThridReq, opts ...kite.Option) (response *VistorBindThridRsp, err error) {
	reqPBData, err := pb.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "glogin", "Bind", "BindThird", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(VistorBindThridRsp)
	err = pb.Unmarshal(resPBData, response)
	return
}

// BindServer is the server API for Bind service.
type BindServer interface {
	BindThird(*VistorBindThridReq) (*VistorBindThridRsp, error)
}

type BindService struct {
	handle BindServer
}

func RegBindServer(handle BindServer) {
	pb.ServiceDispatchObject.AddService("glogin", "Bind", &BindService{handle: handle})
}

func (s *BindService) Do(function string, reqPBData []byte) (resPBData []byte, err error) {
	switch function {
	case "BindThird":
		return s.BindThird(function, reqPBData)
	default:
		err = errors.New("function is not found")
	}
	return
}

func (s *BindService) BindThird(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(VistorBindThridReq)
	pb.Unmarshal(reqPBData, req)
	res := new(VistorBindThridRsp)
	res, err = s.handle.BindThird(req)
	if err == nil {
		resPBData, err = pb.Marshal(res)
	}
	return
}

// GmpClient is the client API for Gmp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/kite#ClientConn.NewStream.
var Gmp = &gmp{}

type gmp struct {
}

func (c *gmp) LoadAccountInfo(destination kite.Destination, request *QueryRequest, opts ...kite.Option) (response *QueryResponse, err error) {
	reqPBData, err := pb.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "glogin", "Gmp", "LoadAccountInfo", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(QueryResponse)
	err = pb.Unmarshal(resPBData, response)
	return
}

func (c *gmp) QueryAccount(destination kite.Destination, request *QueryReq, opts ...kite.Option) (response *QueryRsp, err error) {
	reqPBData, err := pb.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "glogin", "Gmp", "QueryAccount", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(QueryRsp)
	err = pb.Unmarshal(resPBData, response)
	return
}

func (c *gmp) ChangeBind(destination kite.Destination, request *ChangeBindReq, opts ...kite.Option) (response *ChangeBindRsp, err error) {
	reqPBData, err := pb.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "glogin", "Gmp", "ChangeBind", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(ChangeBindRsp)
	err = pb.Unmarshal(resPBData, response)
	return
}

// GmpServer is the server API for Gmp service.
type GmpServer interface {
	LoadAccountInfo(*QueryRequest) (*QueryResponse, error)
	QueryAccount(*QueryReq) (*QueryRsp, error)
	ChangeBind(*ChangeBindReq) (*ChangeBindRsp, error)
}

type GmpService struct {
	handle GmpServer
}

func RegGmpServer(handle GmpServer) {
	pb.ServiceDispatchObject.AddService("glogin", "Gmp", &GmpService{handle: handle})
}

func (s *GmpService) Do(function string, reqPBData []byte) (resPBData []byte, err error) {
	switch function {
	case "LoadAccountInfo":
		return s.LoadAccountInfo(function, reqPBData)
	case "QueryAccount":
		return s.QueryAccount(function, reqPBData)
	case "ChangeBind":
		return s.ChangeBind(function, reqPBData)
	default:
		err = errors.New("function is not found")
	}
	return
}

func (s *GmpService) LoadAccountInfo(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(QueryRequest)
	pb.Unmarshal(reqPBData, req)
	res := new(QueryResponse)
	res, err = s.handle.LoadAccountInfo(req)
	if err == nil {
		resPBData, err = pb.Marshal(res)
	}
	return
}

func (s *GmpService) QueryAccount(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(QueryReq)
	pb.Unmarshal(reqPBData, req)
	res := new(QueryRsp)
	res, err = s.handle.QueryAccount(req)
	if err == nil {
		resPBData, err = pb.Marshal(res)
	}
	return
}

func (s *GmpService) ChangeBind(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(ChangeBindReq)
	pb.Unmarshal(reqPBData, req)
	res := new(ChangeBindRsp)
	res, err = s.handle.ChangeBind(req)
	if err == nil {
		resPBData, err = pb.Marshal(res)
	}
	return
}
