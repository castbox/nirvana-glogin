syntax = "proto3";
package anti_authentication;

// 实名信息认证
message CheckRequest {
    string game_cd = 1;     // 项目组编号
    string id = 2;          // 唯一玩家身份标识，确保每个项目组此id唯一，并且可尽量唯一标识一个玩家。比如数美id，设备id等信息组合。
    string player_info = 3; // 实名认证人姓名加身份证号，此字段为aes-128-gcm+base64加密。格式为base64(vi+aes(name@pid,key))
    string player_name = 4; // 姓名
    string player_id = 5;   // 身份证
}

message CheckResponse {
    string request_id = 1; // 每次请求唯一标识,用作问题校验时查询
    string err_code = 2;   // 错误码
    string err_msg = 3;    // 错误码说明
}

// 实名信息查询
message QueryRequest{
    string game_cd = 1;     // 项目组编号
    string id = 2;          // 唯一玩家身份标识，确保每个项目组此id唯一，并且可尽量唯一标识一个玩家。比如数美id，设备id等信息组合。
}

message QueryResponse{
    string request_id = 1;   // 每次请求唯一标识
    string err_code = 2;     // 错误码
    string err_msg = 3;      // 错误码说明
    bool real_named = 4;     // 是否已实名
    bool grown_up = 5;       // 是否已成年 至下次请求期间，即便玩家变为成年，也只是下次才生效。
}

message StateQueryRequest{
    string game_cd = 1;
    string id = 2;                    // 身份标识，建议填账号
    string device_id = 3;
}

message StateQueryResponse{
    string request_id = 1;            // 每次请求唯一标识
    string err_code = 2;              // 错误码
    string err_msg = 3;               // 错误码说明
    int32 authentication_status = 4;  // 实名状态：0：成年，1：游客，2：0-8岁，3：8-16岁，4：16-18岁，5:认证中，6:异常认证中
    bool is_holiday = 5;              // 是否节假日
    int32 left_game_time = 8;         // 剩余游戏时间，已成年请忽略
    int32 each_pay_amount = 9;        // 单次可充值额度，已成年请忽略
    int32 left_pay_amount = 10;       // 总剩充值额度，已成年请忽略
}

service AuthenticationServer {
    rpc Check(CheckRequest) returns(CheckResponse);
    rpc Query(QueryRequest) returns(QueryResponse);
    rpc StateQuery(StateQueryRequest) returns(StateQueryResponse);
}

message r{
    string game_cd = 1;
    repeated string accounts = 2;
    repeated string device_ids = 3;
}

message rs{
    string game_cd = 1;
    repeated string accounts = 2;
    repeated string device_ids = 3;
} 